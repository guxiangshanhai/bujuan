// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:flutter/material.dart' show debugPrint;
import 'package:bujuan/common/netease_api/src/api/bean.dart';
import 'package:bujuan/common/netease_api/src/api/dj/bean.dart';
import 'package:bujuan/common/netease_api/src/api/event/bean.dart';
import 'package:bujuan/common/netease_api/src/api/login/bean.dart';
import 'package:bujuan/common/netease_api/src/api/play/bean.dart';
import 'package:bujuan/common/netease_api/src/api/search/bean.dart';
import 'package:bujuan/common/netease_api/src/api/uncategorized/bean.dart';
import 'package:bujuan/common/netease_api/src/api/user/bean.dart';

JsonConvert jsonConvert = JsonConvert();
typedef JsonConvertFunction<T> = T Function(Map<String, dynamic> json);

class JsonConvert {
	static final Map<String, JsonConvertFunction> _convertFuncMap = {
		(ServerStatusBean).toString(): ServerStatusBean.fromJson,
		(ServerStatusListBean).toString(): ServerStatusListBean.fromJson,
		(Dj).toString(): Dj.fromJson,
		(DjRadio).toString(): DjRadio.fromJson,
		(DjProgram).toString(): DjProgram.fromJson,
		(DjRadioCategory).toString(): DjRadioCategory.fromJson,
		(DjRadioCategory2).toString(): DjRadioCategory2.fromJson,
		(DjRadioCategoryWrap).toString(): DjRadioCategoryWrap.fromJson,
		(DjRadioCategoryWrap2).toString(): DjRadioCategoryWrap2.fromJson,
		(DjRadioCategoryWrap3).toString(): DjRadioCategoryWrap3.fromJson,
		(DjRadioListWrap).toString(): DjRadioListWrap.fromJson,
		(DjRadioListWrap2).toString(): DjRadioListWrap2.fromJson,
		(DjTopListListWrap).toString(): DjTopListListWrap.fromJson,
		(DjTopListListWrapX).toString(): DjTopListListWrapX.fromJson,
		(DjRadioTopListItem).toString(): DjRadioTopListItem.fromJson,
		(DjRadioTopListListWrap).toString(): DjRadioTopListListWrap.fromJson,
		(DjRadioTopListListWrapX).toString(): DjRadioTopListListWrapX.fromJson,
		(DjRadioDetail).toString(): DjRadioDetail.fromJson,
		(DjRadioTopListListWrapX2).toString(): DjRadioTopListListWrapX2.fromJson,
		(DjProgramListWrap).toString(): DjProgramListWrap.fromJson,
		(DjProgramTopListItem).toString(): DjProgramTopListItem.fromJson,
		(DjProgramTopListListWrap2).toString(): DjProgramTopListListWrap2.fromJson,
		(PersonalizedDjProgramItem).toString(): PersonalizedDjProgramItem.fromJson,
		(DjProgramTopListListWrap).toString(): DjProgramTopListListWrap.fromJson,
		(DjProgramTopListListWrapX).toString(): DjProgramTopListListWrapX.fromJson,
		(PersonalizedDjProgramListWrap).toString(): PersonalizedDjProgramListWrap.fromJson,
		(DjProgramDetail).toString(): DjProgramDetail.fromJson,
		(CommentThread).toString(): CommentThread.fromJson,
		(EventItemInfo).toString(): EventItemInfo.fromJson,
		(EventItem).toString(): EventItem.fromJson,
		(EventListWrap).toString(): EventListWrap.fromJson,
		(EventListWrap2).toString(): EventListWrap2.fromJson,
		(EventSingleWrap).toString(): EventSingleWrap.fromJson,
		(CommentItemBase).toString(): CommentItemBase.fromJson,
		(CommentItem).toString(): CommentItem.fromJson,
		(BeRepliedCommentItem).toString(): BeRepliedCommentItem.fromJson,
		(CommentListWrap).toString(): CommentListWrap.fromJson,
		(CommentHistoryData).toString(): CommentHistoryData.fromJson,
		(CommentHistoryWrap).toString(): CommentHistoryWrap.fromJson,
		(CommentList2DataSortType).toString(): CommentList2DataSortType.fromJson,
		(CommentList2Data).toString(): CommentList2Data.fromJson,
		(CommentList2Wrap).toString(): CommentList2Wrap.fromJson,
		(HugComment).toString(): HugComment.fromJson,
		(HugCommentListData).toString(): HugCommentListData.fromJson,
		(HugCommentListWrap).toString(): HugCommentListWrap.fromJson,
		(FloorCommentDetail).toString(): FloorCommentDetail.fromJson,
		(FloorCommentDetailWrap).toString(): FloorCommentDetailWrap.fromJson,
		(EventForwardRet).toString(): EventForwardRet.fromJson,
		(EventForwardRetWrap).toString(): EventForwardRetWrap.fromJson,
		(TopicContent).toString(): TopicContent.fromJson,
		(Topic).toString(): Topic.fromJson,
		(TopicItem2).toString(): TopicItem2.fromJson,
		(TopicItem).toString(): TopicItem.fromJson,
		(TopicHotListWrap).toString(): TopicHotListWrap.fromJson,
		(TopicDetailWrap).toString(): TopicDetailWrap.fromJson,
		(SimpleResourceInfo).toString(): SimpleResourceInfo.fromJson,
		(HotwallCommentItem).toString(): HotwallCommentItem.fromJson,
		(HotwallCommentListWrap).toString(): HotwallCommentListWrap.fromJson,
		(CommentSimple).toString(): CommentSimple.fromJson,
		(Comment).toString(): Comment.fromJson,
		(CommentWrap).toString(): CommentWrap.fromJson,
		(MsgPromotion).toString(): MsgPromotion.fromJson,
		(MsgGeneral).toString(): MsgGeneral.fromJson,
		(MsgContent).toString(): MsgContent.fromJson,
		(Msg).toString(): Msg.fromJson,
		(Msg2).toString(): Msg2.fromJson,
		(UsersMsgListWrap).toString(): UsersMsgListWrap.fromJson,
		(RecentContactUsersData).toString(): RecentContactUsersData.fromJson,
		(RecentContactUsersWrap).toString(): RecentContactUsersWrap.fromJson,
		(UserMsgListWrap).toString(): UserMsgListWrap.fromJson,
		(UserMsgListWrap2).toString(): UserMsgListWrap2.fromJson,
		(Cover).toString(): Cover.fromJson,
		(Talk).toString(): Talk.fromJson,
		(MyLogBaseData).toString(): MyLogBaseData.fromJson,
		(MyLogResourceExt).toString(): MyLogResourceExt.fromJson,
		(MyLogResource).toString(): MyLogResource.fromJson,
		(MyLog).toString(): MyLog.fromJson,
		(MyLogMyLikeData).toString(): MyLogMyLikeData.fromJson,
		(MyLogMyLikeWrap).toString(): MyLogMyLikeWrap.fromJson,
		(NeteaseAccount).toString(): NeteaseAccount.fromJson,
		(NeteaseAccountProfile).toString(): NeteaseAccountProfile.fromJson,
		(NeteaseAccountInfoWrap).toString(): NeteaseAccountInfoWrap.fromJson,
		(NeteaseAccountBinding).toString(): NeteaseAccountBinding.fromJson,
		(NeteaseAccountBindingWrap).toString(): NeteaseAccountBindingWrap.fromJson,
		(CellPhoneCheckExistenceRet).toString(): CellPhoneCheckExistenceRet.fromJson,
		(AnonimousLoginRet).toString(): AnonimousLoginRet.fromJson,
		(QrCodeLoginKey).toString(): QrCodeLoginKey.fromJson,
		(Music).toString(): Music.fromJson,
		(Music2).toString(): Music2.fromJson,
		(Lyrics).toString(): Lyrics.fromJson,
		(Lyrics2).toString(): Lyrics2.fromJson,
		(Privilege).toString(): Privilege.fromJson,
		(Song).toString(): Song.fromJson,
		(Song2).toString(): Song2.fromJson,
		(SongDetailWrap).toString(): SongDetailWrap.fromJson,
		(SongUrl).toString(): SongUrl.fromJson,
		(SongUrlListWrap).toString(): SongUrlListWrap.fromJson,
		(SongLyricWrap).toString(): SongLyricWrap.fromJson,
		(SongListWrap).toString(): SongListWrap.fromJson,
		(SongListWrap2).toString(): SongListWrap2.fromJson,
		(PersonalizedSongItem).toString(): PersonalizedSongItem.fromJson,
		(PersonalizedSongListWrap).toString(): PersonalizedSongListWrap.fromJson,
		(LikeSongListWrap).toString(): LikeSongListWrap.fromJson,
		(CloudSongItem).toString(): CloudSongItem.fromJson,
		(CloudSongListWrap).toString(): CloudSongListWrap.fromJson,
		(RecommendSongReason).toString(): RecommendSongReason.fromJson,
		(RecommendSongListWrap).toString(): RecommendSongListWrap.fromJson,
		(RecommendSongListWrapX).toString(): RecommendSongListWrapX.fromJson,
		(RecommendSongListHistoryWrap).toString(): RecommendSongListHistoryWrap.fromJson,
		(RecommendSongListHistoryWrapX).toString(): RecommendSongListHistoryWrapX.fromJson,
		(ArtistSongListWrap).toString(): ArtistSongListWrap.fromJson,
		(ArtistNewSongListData).toString(): ArtistNewSongListData.fromJson,
		(ArtistNewSongListWrap).toString(): ArtistNewSongListWrap.fromJson,
		(ArtistDetailAndSongListWrap).toString(): ArtistDetailAndSongListWrap.fromJson,
		(Play).toString(): Play.fromJson,
		(PlayTrack).toString(): PlayTrack.fromJson,
		(PlayTrackId).toString(): PlayTrackId.fromJson,
		(MultiPlayListWrap).toString(): MultiPlayListWrap.fromJson,
		(MultiPlayListWrap2).toString(): MultiPlayListWrap2.fromJson,
		(RecommendPlayListWrap).toString(): RecommendPlayListWrap.fromJson,
		(PersonalizedPlayListWrap).toString(): PersonalizedPlayListWrap.fromJson,
		(PlaylistCatalogueItem).toString(): PlaylistCatalogueItem.fromJson,
		(PlaylistCatalogueWrap).toString(): PlaylistCatalogueWrap.fromJson,
		(PlaylistHotTag).toString(): PlaylistHotTag.fromJson,
		(PlaylistHotTagsItem).toString(): PlaylistHotTagsItem.fromJson,
		(PlaylistHotTagsWrap).toString(): PlaylistHotTagsWrap.fromJson,
		(SinglePlayListWrap).toString(): SinglePlayListWrap.fromJson,
		(PlayListDetailDynamicWrap).toString(): PlayListDetailDynamicWrap.fromJson,
		(PlaymodeIntelligenceItem).toString(): PlaymodeIntelligenceItem.fromJson,
		(PlaymodeIntelligenceListWrap).toString(): PlaymodeIntelligenceListWrap.fromJson,
		(Artists).toString(): Artists.fromJson,
		(ArtistsListWrap).toString(): ArtistsListWrap.fromJson,
		(ArtistsTopListWrap).toString(): ArtistsTopListWrap.fromJson,
		(ArtistsTopListWrapX).toString(): ArtistsTopListWrapX.fromJson,
		(ArtistIntroduction).toString(): ArtistIntroduction.fromJson,
		(ArtistDescWrap).toString(): ArtistDescWrap.fromJson,
		(ArtistDetailData).toString(): ArtistDetailData.fromJson,
		(ArtistDetailWrap).toString(): ArtistDetailWrap.fromJson,
		(Album).toString(): Album.fromJson,
		(AlbumDetailWrap).toString(): AlbumDetailWrap.fromJson,
		(AlbumDetailDynamicWrap).toString(): AlbumDetailDynamicWrap.fromJson,
		(AlbumListWrap).toString(): AlbumListWrap.fromJson,
		(ArtistAlbumListWrap).toString(): ArtistAlbumListWrap.fromJson,
		(MvCreator).toString(): MvCreator.fromJson,
		(Mv).toString(): Mv.fromJson,
		(Mv2).toString(): Mv2.fromJson,
		(Mv3).toString(): Mv3.fromJson,
		(MvListWrap).toString(): MvListWrap.fromJson,
		(MvListWrap2).toString(): MvListWrap2.fromJson,
		(PersonalizedMvListWrap).toString(): PersonalizedMvListWrap.fromJson,
		(ArtistMvListWrap).toString(): ArtistMvListWrap.fromJson,
		(ArtistNewMvListData).toString(): ArtistNewMvListData.fromJson,
		(ArtistNewMvListWrap).toString(): ArtistNewMvListWrap.fromJson,
		(MvDetailWrap).toString(): MvDetailWrap.fromJson,
		(MvDetailInfoWrap).toString(): MvDetailInfoWrap.fromJson,
		(MvUrl).toString(): MvUrl.fromJson,
		(MvUrlWrap).toString(): MvUrlWrap.fromJson,
		(VideoResolution).toString(): VideoResolution.fromJson,
		(VideoUrlInfo).toString(): VideoUrlInfo.fromJson,
		(VideoBase).toString(): VideoBase.fromJson,
		(Video).toString(): Video.fromJson,
		(Video2).toString(): Video2.fromJson,
		(VideoMetaItem).toString(): VideoMetaItem.fromJson,
		(VideoMetaListWrap).toString(): VideoMetaListWrap.fromJson,
		(VideoWrap).toString(): VideoWrap.fromJson,
		(VideoListWrapX).toString(): VideoListWrapX.fromJson,
		(VideoListWrap).toString(): VideoListWrap.fromJson,
		(VideoDetailWrap).toString(): VideoDetailWrap.fromJson,
		(VideoDetailInfoWrap).toString(): VideoDetailInfoWrap.fromJson,
		(VideoUrl).toString(): VideoUrl.fromJson,
		(VideoUrlWrap).toString(): VideoUrlWrap.fromJson,
		(SearchSongWrap).toString(): SearchSongWrap.fromJson,
		(SearchSongWrapX).toString(): SearchSongWrapX.fromJson,
		(SearchAlbumsWrapX).toString(): SearchAlbumsWrapX.fromJson,
		(SearchArtistsWrap).toString(): SearchArtistsWrap.fromJson,
		(SearchArtistsWrapX).toString(): SearchArtistsWrapX.fromJson,
		(SearchPlaylistWrap).toString(): SearchPlaylistWrap.fromJson,
		(SearchPlaylistWrapX).toString(): SearchPlaylistWrapX.fromJson,
		(SearchUserWrapX).toString(): SearchUserWrapX.fromJson,
		(SearchMvWrapX).toString(): SearchMvWrapX.fromJson,
		(SearchLyricsWrap).toString(): SearchLyricsWrap.fromJson,
		(SearchLyricsWrapX).toString(): SearchLyricsWrapX.fromJson,
		(SearchDjradiorap).toString(): SearchDjradiorap.fromJson,
		(SearchDjradioWrapX).toString(): SearchDjradioWrapX.fromJson,
		(SearchVideoWrap).toString(): SearchVideoWrap.fromJson,
		(SearchVideoWrapX).toString(): SearchVideoWrapX.fromJson,
		(SearchComplexSong).toString(): SearchComplexSong.fromJson,
		(SearchComplexMlog).toString(): SearchComplexMlog.fromJson,
		(SearchComplexPlaylist).toString(): SearchComplexPlaylist.fromJson,
		(SearchComplexArtist).toString(): SearchComplexArtist.fromJson,
		(SearchComplexAlbum).toString(): SearchComplexAlbum.fromJson,
		(SearchComplexVideo).toString(): SearchComplexVideo.fromJson,
		(SearchComplexSimQueryItem).toString(): SearchComplexSimQueryItem.fromJson,
		(SearchComplexSimQuery).toString(): SearchComplexSimQuery.fromJson,
		(SearchComplexTalk).toString(): SearchComplexTalk.fromJson,
		(SearchComplexUser).toString(): SearchComplexUser.fromJson,
		(SearchComplexWrap).toString(): SearchComplexWrap.fromJson,
		(SearchComplexWrapX).toString(): SearchComplexWrapX.fromJson,
		(SearchKey).toString(): SearchKey.fromJson,
		(SearchKeyWrap).toString(): SearchKeyWrap.fromJson,
		(SearchHotKey).toString(): SearchHotKey.fromJson,
		(SearchHotKeyWrap).toString(): SearchHotKeyWrap.fromJson,
		(SearchKeyWrapX).toString(): SearchKeyWrapX.fromJson,
		(SearchKeyDetailedItem).toString(): SearchKeyDetailedItem.fromJson,
		(SearchKeyDetailedWrap).toString(): SearchKeyDetailedWrap.fromJson,
		(SearchSuggestItem).toString(): SearchSuggestItem.fromJson,
		(SearchSuggestWrap).toString(): SearchSuggestWrap.fromJson,
		(SearchSuggestWrapX).toString(): SearchSuggestWrapX.fromJson,
		(SearchMultiMatchWrap).toString(): SearchMultiMatchWrap.fromJson,
		(SearchMultiMatchWrapX).toString(): SearchMultiMatchWrapX.fromJson,
		(BannerItem).toString(): BannerItem.fromJson,
		(BannerListWrap).toString(): BannerListWrap.fromJson,
		(BannerListWrap2).toString(): BannerListWrap2.fromJson,
		(PageConfig).toString(): PageConfig.fromJson,
		(HomeBlockPageUiElementTitle).toString(): HomeBlockPageUiElementTitle.fromJson,
		(HomeBlockPageUiElementButton).toString(): HomeBlockPageUiElementButton.fromJson,
		(HomeBlockPageUiElementImage).toString(): HomeBlockPageUiElementImage.fromJson,
		(HomeBlockPageUiElement).toString(): HomeBlockPageUiElement.fromJson,
		(HomeBlockPageResourceExt).toString(): HomeBlockPageResourceExt.fromJson,
		(HomeBlockPageResource).toString(): HomeBlockPageResource.fromJson,
		(HomeBlockPageCreative).toString(): HomeBlockPageCreative.fromJson,
		(HomeBlockPageItem).toString(): HomeBlockPageItem.fromJson,
		(HomeBlockPageCursor).toString(): HomeBlockPageCursor.fromJson,
		(HomeBlockPage).toString(): HomeBlockPage.fromJson,
		(HomeBlockPageWrap).toString(): HomeBlockPageWrap.fromJson,
		(HomeDragonBallItem).toString(): HomeDragonBallItem.fromJson,
		(HomeDragonBallWrap).toString(): HomeDragonBallWrap.fromJson,
		(CountriesCodeItem).toString(): CountriesCodeItem.fromJson,
		(CountriesCodeIndex).toString(): CountriesCodeIndex.fromJson,
		(CountriesCodeListWrap).toString(): CountriesCodeListWrap.fromJson,
		(PersonalizedPrivateContentItem).toString(): PersonalizedPrivateContentItem.fromJson,
		(PersonalizedPrivateContentListWrap).toString(): PersonalizedPrivateContentListWrap.fromJson,
		(TopListTrack).toString(): TopListTrack.fromJson,
		(TopList).toString(): TopList.fromJson,
		(ArtistTopListArtists).toString(): ArtistTopListArtists.fromJson,
		(ArtistTopList).toString(): ArtistTopList.fromJson,
		(RewardTopList).toString(): RewardTopList.fromJson,
		(TopListWrap).toString(): TopListWrap.fromJson,
		(TopListDetailWrap).toString(): TopListDetailWrap.fromJson,
		(McalendarDetailEvent).toString(): McalendarDetailEvent.fromJson,
		(McalendarDetail).toString(): McalendarDetail.fromJson,
		(McalendarDetailWrap).toString(): McalendarDetailWrap.fromJson,
		(AudioMatchResult).toString(): AudioMatchResult.fromJson,
		(AudioMatchResultData).toString(): AudioMatchResultData.fromJson,
		(AudioMatchResultWrap).toString(): AudioMatchResultWrap.fromJson,
		(ListenTogetherStatusData).toString(): ListenTogetherStatusData.fromJson,
		(ListenTogetherStatusWrap).toString(): ListenTogetherStatusWrap.fromJson,
		(UploadImageAlloc).toString(): UploadImageAlloc.fromJson,
		(UploadImageAllocWrap).toString(): UploadImageAllocWrap.fromJson,
		(UploadImageResult).toString(): UploadImageResult.fromJson,
		(UserSetting).toString(): UserSetting.fromJson,
		(UserSettingWrap).toString(): UserSettingWrap.fromJson,
		(NeteaseSimpleUserInfo).toString(): NeteaseSimpleUserInfo.fromJson,
		(NeteaseUserInfo).toString(): NeteaseUserInfo.fromJson,
		(NeteaseUserDetail).toString(): NeteaseUserDetail.fromJson,
		(NeteaseUserSubcount).toString(): NeteaseUserSubcount.fromJson,
		(NeteaseUserLevel).toString(): NeteaseUserLevel.fromJson,
		(NeteaseUserLevelWrap).toString(): NeteaseUserLevelWrap.fromJson,
		(UserFollowListWrap).toString(): UserFollowListWrap.fromJson,
		(UserFollowedListWrap).toString(): UserFollowedListWrap.fromJson,
		(UserListWrap).toString(): UserListWrap.fromJson,
		(ArtistsSubListWrap).toString(): ArtistsSubListWrap.fromJson,
		(MvSubListWrap).toString(): MvSubListWrap.fromJson,
		(AlbumSubListWrap).toString(): AlbumSubListWrap.fromJson,
		(PlayRecordItem).toString(): PlayRecordItem.fromJson,
		(PlayRecordListWrap).toString(): PlayRecordListWrap.fromJson,
		(PlaylistCreateWrap).toString(): PlaylistCreateWrap.fromJson,
		(PlaylistSubscribersWrap).toString(): PlaylistSubscribersWrap.fromJson,
	};

  T? convert<T>(dynamic value) {
    if (value == null) {
      return null;
    }
    return asT<T>(value);
  }

  List<T?>? convertList<T>(List<dynamic>? value) {
    if (value == null) {
      return null;
    }
    try {
      return value.map((dynamic e) => asT<T>(e)).toList();
    } catch (e, stackTrace) {
      debugPrint('asT<$T> $e $stackTrace');
      return <T>[];
    }
  }

  List<T>? convertListNotNull<T>(dynamic value) {
    if (value == null) {
      return null;
    }
    try {
      return (value as List<dynamic>).map((dynamic e) => asT<T>(e)!).toList();
    } catch (e, stackTrace) {
      debugPrint('asT<$T> $e $stackTrace');
      return <T>[];
    }
  }

  T? asT<T extends Object?>(dynamic value) {
    if (value is T) {
      return value;
    }
    final String type = T.toString();
    try {
      final String valueS = value.toString();
      if (type == "String") {
        return valueS as T;
      } else if (type == "int") {
        final int? intValue = int.tryParse(valueS);
        if (intValue == null) {
          return double.tryParse(valueS)?.toInt() as T?;
        } else {
          return intValue as T;
        }
      } else if (type == "double") {
        return double.parse(valueS) as T;
      } else if (type == "DateTime") {
        return DateTime.parse(valueS) as T;
      } else if (type == "bool") {
        if (valueS == '0' || valueS == '1') {
          return (valueS == '1') as T;
        }
        return (valueS == 'true') as T;
      } else if (type == "Map" || type.startsWith("Map<")) {
        return value as T;
      } else {
        if (_convertFuncMap.containsKey(type)) {
          return _convertFuncMap[type]!(value) as T;
        } else {
          throw UnimplementedError('$type unimplemented');
        }
      }
    } catch (e, stackTrace) {
      debugPrint('asT<$T> $e $stackTrace');
      return null;
    }
  }

	//list is returned by type
	static M? _getListChildType<M>(List<Map<String, dynamic>> data) {
		if(<ServerStatusBean>[] is M){
			return data.map<ServerStatusBean>((Map<String, dynamic> e) => ServerStatusBean.fromJson(e)).toList() as M;
		}
		if(<ServerStatusListBean>[] is M){
			return data.map<ServerStatusListBean>((Map<String, dynamic> e) => ServerStatusListBean.fromJson(e)).toList() as M;
		}
		if(<Dj>[] is M){
			return data.map<Dj>((Map<String, dynamic> e) => Dj.fromJson(e)).toList() as M;
		}
		if(<DjRadio>[] is M){
			return data.map<DjRadio>((Map<String, dynamic> e) => DjRadio.fromJson(e)).toList() as M;
		}
		if(<DjProgram>[] is M){
			return data.map<DjProgram>((Map<String, dynamic> e) => DjProgram.fromJson(e)).toList() as M;
		}
		if(<DjRadioCategory>[] is M){
			return data.map<DjRadioCategory>((Map<String, dynamic> e) => DjRadioCategory.fromJson(e)).toList() as M;
		}
		if(<DjRadioCategory2>[] is M){
			return data.map<DjRadioCategory2>((Map<String, dynamic> e) => DjRadioCategory2.fromJson(e)).toList() as M;
		}
		if(<DjRadioCategoryWrap>[] is M){
			return data.map<DjRadioCategoryWrap>((Map<String, dynamic> e) => DjRadioCategoryWrap.fromJson(e)).toList() as M;
		}
		if(<DjRadioCategoryWrap2>[] is M){
			return data.map<DjRadioCategoryWrap2>((Map<String, dynamic> e) => DjRadioCategoryWrap2.fromJson(e)).toList() as M;
		}
		if(<DjRadioCategoryWrap3>[] is M){
			return data.map<DjRadioCategoryWrap3>((Map<String, dynamic> e) => DjRadioCategoryWrap3.fromJson(e)).toList() as M;
		}
		if(<DjRadioListWrap>[] is M){
			return data.map<DjRadioListWrap>((Map<String, dynamic> e) => DjRadioListWrap.fromJson(e)).toList() as M;
		}
		if(<DjRadioListWrap2>[] is M){
			return data.map<DjRadioListWrap2>((Map<String, dynamic> e) => DjRadioListWrap2.fromJson(e)).toList() as M;
		}
		if(<DjTopListListWrap>[] is M){
			return data.map<DjTopListListWrap>((Map<String, dynamic> e) => DjTopListListWrap.fromJson(e)).toList() as M;
		}
		if(<DjTopListListWrapX>[] is M){
			return data.map<DjTopListListWrapX>((Map<String, dynamic> e) => DjTopListListWrapX.fromJson(e)).toList() as M;
		}
		if(<DjRadioTopListItem>[] is M){
			return data.map<DjRadioTopListItem>((Map<String, dynamic> e) => DjRadioTopListItem.fromJson(e)).toList() as M;
		}
		if(<DjRadioTopListListWrap>[] is M){
			return data.map<DjRadioTopListListWrap>((Map<String, dynamic> e) => DjRadioTopListListWrap.fromJson(e)).toList() as M;
		}
		if(<DjRadioTopListListWrapX>[] is M){
			return data.map<DjRadioTopListListWrapX>((Map<String, dynamic> e) => DjRadioTopListListWrapX.fromJson(e)).toList() as M;
		}
		if(<DjRadioDetail>[] is M){
			return data.map<DjRadioDetail>((Map<String, dynamic> e) => DjRadioDetail.fromJson(e)).toList() as M;
		}
		if(<DjRadioTopListListWrapX2>[] is M){
			return data.map<DjRadioTopListListWrapX2>((Map<String, dynamic> e) => DjRadioTopListListWrapX2.fromJson(e)).toList() as M;
		}
		if(<DjProgramListWrap>[] is M){
			return data.map<DjProgramListWrap>((Map<String, dynamic> e) => DjProgramListWrap.fromJson(e)).toList() as M;
		}
		if(<DjProgramTopListItem>[] is M){
			return data.map<DjProgramTopListItem>((Map<String, dynamic> e) => DjProgramTopListItem.fromJson(e)).toList() as M;
		}
		if(<DjProgramTopListListWrap2>[] is M){
			return data.map<DjProgramTopListListWrap2>((Map<String, dynamic> e) => DjProgramTopListListWrap2.fromJson(e)).toList() as M;
		}
		if(<PersonalizedDjProgramItem>[] is M){
			return data.map<PersonalizedDjProgramItem>((Map<String, dynamic> e) => PersonalizedDjProgramItem.fromJson(e)).toList() as M;
		}
		if(<DjProgramTopListListWrap>[] is M){
			return data.map<DjProgramTopListListWrap>((Map<String, dynamic> e) => DjProgramTopListListWrap.fromJson(e)).toList() as M;
		}
		if(<DjProgramTopListListWrapX>[] is M){
			return data.map<DjProgramTopListListWrapX>((Map<String, dynamic> e) => DjProgramTopListListWrapX.fromJson(e)).toList() as M;
		}
		if(<PersonalizedDjProgramListWrap>[] is M){
			return data.map<PersonalizedDjProgramListWrap>((Map<String, dynamic> e) => PersonalizedDjProgramListWrap.fromJson(e)).toList() as M;
		}
		if(<DjProgramDetail>[] is M){
			return data.map<DjProgramDetail>((Map<String, dynamic> e) => DjProgramDetail.fromJson(e)).toList() as M;
		}
		if(<CommentThread>[] is M){
			return data.map<CommentThread>((Map<String, dynamic> e) => CommentThread.fromJson(e)).toList() as M;
		}
		if(<EventItemInfo>[] is M){
			return data.map<EventItemInfo>((Map<String, dynamic> e) => EventItemInfo.fromJson(e)).toList() as M;
		}
		if(<EventItem>[] is M){
			return data.map<EventItem>((Map<String, dynamic> e) => EventItem.fromJson(e)).toList() as M;
		}
		if(<EventListWrap>[] is M){
			return data.map<EventListWrap>((Map<String, dynamic> e) => EventListWrap.fromJson(e)).toList() as M;
		}
		if(<EventListWrap2>[] is M){
			return data.map<EventListWrap2>((Map<String, dynamic> e) => EventListWrap2.fromJson(e)).toList() as M;
		}
		if(<EventSingleWrap>[] is M){
			return data.map<EventSingleWrap>((Map<String, dynamic> e) => EventSingleWrap.fromJson(e)).toList() as M;
		}
		if(<CommentItemBase>[] is M){
			return data.map<CommentItemBase>((Map<String, dynamic> e) => CommentItemBase.fromJson(e)).toList() as M;
		}
		if(<CommentItem>[] is M){
			return data.map<CommentItem>((Map<String, dynamic> e) => CommentItem.fromJson(e)).toList() as M;
		}
		if(<BeRepliedCommentItem>[] is M){
			return data.map<BeRepliedCommentItem>((Map<String, dynamic> e) => BeRepliedCommentItem.fromJson(e)).toList() as M;
		}
		if(<CommentListWrap>[] is M){
			return data.map<CommentListWrap>((Map<String, dynamic> e) => CommentListWrap.fromJson(e)).toList() as M;
		}
		if(<CommentHistoryData>[] is M){
			return data.map<CommentHistoryData>((Map<String, dynamic> e) => CommentHistoryData.fromJson(e)).toList() as M;
		}
		if(<CommentHistoryWrap>[] is M){
			return data.map<CommentHistoryWrap>((Map<String, dynamic> e) => CommentHistoryWrap.fromJson(e)).toList() as M;
		}
		if(<CommentList2DataSortType>[] is M){
			return data.map<CommentList2DataSortType>((Map<String, dynamic> e) => CommentList2DataSortType.fromJson(e)).toList() as M;
		}
		if(<CommentList2Data>[] is M){
			return data.map<CommentList2Data>((Map<String, dynamic> e) => CommentList2Data.fromJson(e)).toList() as M;
		}
		if(<CommentList2Wrap>[] is M){
			return data.map<CommentList2Wrap>((Map<String, dynamic> e) => CommentList2Wrap.fromJson(e)).toList() as M;
		}
		if(<HugComment>[] is M){
			return data.map<HugComment>((Map<String, dynamic> e) => HugComment.fromJson(e)).toList() as M;
		}
		if(<HugCommentListData>[] is M){
			return data.map<HugCommentListData>((Map<String, dynamic> e) => HugCommentListData.fromJson(e)).toList() as M;
		}
		if(<HugCommentListWrap>[] is M){
			return data.map<HugCommentListWrap>((Map<String, dynamic> e) => HugCommentListWrap.fromJson(e)).toList() as M;
		}
		if(<FloorCommentDetail>[] is M){
			return data.map<FloorCommentDetail>((Map<String, dynamic> e) => FloorCommentDetail.fromJson(e)).toList() as M;
		}
		if(<FloorCommentDetailWrap>[] is M){
			return data.map<FloorCommentDetailWrap>((Map<String, dynamic> e) => FloorCommentDetailWrap.fromJson(e)).toList() as M;
		}
		if(<EventForwardRet>[] is M){
			return data.map<EventForwardRet>((Map<String, dynamic> e) => EventForwardRet.fromJson(e)).toList() as M;
		}
		if(<EventForwardRetWrap>[] is M){
			return data.map<EventForwardRetWrap>((Map<String, dynamic> e) => EventForwardRetWrap.fromJson(e)).toList() as M;
		}
		if(<TopicContent>[] is M){
			return data.map<TopicContent>((Map<String, dynamic> e) => TopicContent.fromJson(e)).toList() as M;
		}
		if(<Topic>[] is M){
			return data.map<Topic>((Map<String, dynamic> e) => Topic.fromJson(e)).toList() as M;
		}
		if(<TopicItem2>[] is M){
			return data.map<TopicItem2>((Map<String, dynamic> e) => TopicItem2.fromJson(e)).toList() as M;
		}
		if(<TopicItem>[] is M){
			return data.map<TopicItem>((Map<String, dynamic> e) => TopicItem.fromJson(e)).toList() as M;
		}
		if(<TopicHotListWrap>[] is M){
			return data.map<TopicHotListWrap>((Map<String, dynamic> e) => TopicHotListWrap.fromJson(e)).toList() as M;
		}
		if(<TopicDetailWrap>[] is M){
			return data.map<TopicDetailWrap>((Map<String, dynamic> e) => TopicDetailWrap.fromJson(e)).toList() as M;
		}
		if(<SimpleResourceInfo>[] is M){
			return data.map<SimpleResourceInfo>((Map<String, dynamic> e) => SimpleResourceInfo.fromJson(e)).toList() as M;
		}
		if(<HotwallCommentItem>[] is M){
			return data.map<HotwallCommentItem>((Map<String, dynamic> e) => HotwallCommentItem.fromJson(e)).toList() as M;
		}
		if(<HotwallCommentListWrap>[] is M){
			return data.map<HotwallCommentListWrap>((Map<String, dynamic> e) => HotwallCommentListWrap.fromJson(e)).toList() as M;
		}
		if(<CommentSimple>[] is M){
			return data.map<CommentSimple>((Map<String, dynamic> e) => CommentSimple.fromJson(e)).toList() as M;
		}
		if(<Comment>[] is M){
			return data.map<Comment>((Map<String, dynamic> e) => Comment.fromJson(e)).toList() as M;
		}
		if(<CommentWrap>[] is M){
			return data.map<CommentWrap>((Map<String, dynamic> e) => CommentWrap.fromJson(e)).toList() as M;
		}
		if(<MsgPromotion>[] is M){
			return data.map<MsgPromotion>((Map<String, dynamic> e) => MsgPromotion.fromJson(e)).toList() as M;
		}
		if(<MsgGeneral>[] is M){
			return data.map<MsgGeneral>((Map<String, dynamic> e) => MsgGeneral.fromJson(e)).toList() as M;
		}
		if(<MsgContent>[] is M){
			return data.map<MsgContent>((Map<String, dynamic> e) => MsgContent.fromJson(e)).toList() as M;
		}
		if(<Msg>[] is M){
			return data.map<Msg>((Map<String, dynamic> e) => Msg.fromJson(e)).toList() as M;
		}
		if(<Msg2>[] is M){
			return data.map<Msg2>((Map<String, dynamic> e) => Msg2.fromJson(e)).toList() as M;
		}
		if(<UsersMsgListWrap>[] is M){
			return data.map<UsersMsgListWrap>((Map<String, dynamic> e) => UsersMsgListWrap.fromJson(e)).toList() as M;
		}
		if(<RecentContactUsersData>[] is M){
			return data.map<RecentContactUsersData>((Map<String, dynamic> e) => RecentContactUsersData.fromJson(e)).toList() as M;
		}
		if(<RecentContactUsersWrap>[] is M){
			return data.map<RecentContactUsersWrap>((Map<String, dynamic> e) => RecentContactUsersWrap.fromJson(e)).toList() as M;
		}
		if(<UserMsgListWrap>[] is M){
			return data.map<UserMsgListWrap>((Map<String, dynamic> e) => UserMsgListWrap.fromJson(e)).toList() as M;
		}
		if(<UserMsgListWrap2>[] is M){
			return data.map<UserMsgListWrap2>((Map<String, dynamic> e) => UserMsgListWrap2.fromJson(e)).toList() as M;
		}
		if(<Cover>[] is M){
			return data.map<Cover>((Map<String, dynamic> e) => Cover.fromJson(e)).toList() as M;
		}
		if(<Talk>[] is M){
			return data.map<Talk>((Map<String, dynamic> e) => Talk.fromJson(e)).toList() as M;
		}
		if(<MyLogBaseData>[] is M){
			return data.map<MyLogBaseData>((Map<String, dynamic> e) => MyLogBaseData.fromJson(e)).toList() as M;
		}
		if(<MyLogResourceExt>[] is M){
			return data.map<MyLogResourceExt>((Map<String, dynamic> e) => MyLogResourceExt.fromJson(e)).toList() as M;
		}
		if(<MyLogResource>[] is M){
			return data.map<MyLogResource>((Map<String, dynamic> e) => MyLogResource.fromJson(e)).toList() as M;
		}
		if(<MyLog>[] is M){
			return data.map<MyLog>((Map<String, dynamic> e) => MyLog.fromJson(e)).toList() as M;
		}
		if(<MyLogMyLikeData>[] is M){
			return data.map<MyLogMyLikeData>((Map<String, dynamic> e) => MyLogMyLikeData.fromJson(e)).toList() as M;
		}
		if(<MyLogMyLikeWrap>[] is M){
			return data.map<MyLogMyLikeWrap>((Map<String, dynamic> e) => MyLogMyLikeWrap.fromJson(e)).toList() as M;
		}
		if(<NeteaseAccount>[] is M){
			return data.map<NeteaseAccount>((Map<String, dynamic> e) => NeteaseAccount.fromJson(e)).toList() as M;
		}
		if(<NeteaseAccountProfile>[] is M){
			return data.map<NeteaseAccountProfile>((Map<String, dynamic> e) => NeteaseAccountProfile.fromJson(e)).toList() as M;
		}
		if(<NeteaseAccountInfoWrap>[] is M){
			return data.map<NeteaseAccountInfoWrap>((Map<String, dynamic> e) => NeteaseAccountInfoWrap.fromJson(e)).toList() as M;
		}
		if(<NeteaseAccountBinding>[] is M){
			return data.map<NeteaseAccountBinding>((Map<String, dynamic> e) => NeteaseAccountBinding.fromJson(e)).toList() as M;
		}
		if(<NeteaseAccountBindingWrap>[] is M){
			return data.map<NeteaseAccountBindingWrap>((Map<String, dynamic> e) => NeteaseAccountBindingWrap.fromJson(e)).toList() as M;
		}
		if(<CellPhoneCheckExistenceRet>[] is M){
			return data.map<CellPhoneCheckExistenceRet>((Map<String, dynamic> e) => CellPhoneCheckExistenceRet.fromJson(e)).toList() as M;
		}
		if(<AnonimousLoginRet>[] is M){
			return data.map<AnonimousLoginRet>((Map<String, dynamic> e) => AnonimousLoginRet.fromJson(e)).toList() as M;
		}
		if(<QrCodeLoginKey>[] is M){
			return data.map<QrCodeLoginKey>((Map<String, dynamic> e) => QrCodeLoginKey.fromJson(e)).toList() as M;
		}
		if(<Music>[] is M){
			return data.map<Music>((Map<String, dynamic> e) => Music.fromJson(e)).toList() as M;
		}
		if(<Music2>[] is M){
			return data.map<Music2>((Map<String, dynamic> e) => Music2.fromJson(e)).toList() as M;
		}
		if(<Lyrics>[] is M){
			return data.map<Lyrics>((Map<String, dynamic> e) => Lyrics.fromJson(e)).toList() as M;
		}
		if(<Lyrics2>[] is M){
			return data.map<Lyrics2>((Map<String, dynamic> e) => Lyrics2.fromJson(e)).toList() as M;
		}
		if(<Privilege>[] is M){
			return data.map<Privilege>((Map<String, dynamic> e) => Privilege.fromJson(e)).toList() as M;
		}
		if(<Song>[] is M){
			return data.map<Song>((Map<String, dynamic> e) => Song.fromJson(e)).toList() as M;
		}
		if(<Song2>[] is M){
			return data.map<Song2>((Map<String, dynamic> e) => Song2.fromJson(e)).toList() as M;
		}
		if(<SongDetailWrap>[] is M){
			return data.map<SongDetailWrap>((Map<String, dynamic> e) => SongDetailWrap.fromJson(e)).toList() as M;
		}
		if(<SongUrl>[] is M){
			return data.map<SongUrl>((Map<String, dynamic> e) => SongUrl.fromJson(e)).toList() as M;
		}
		if(<SongUrlListWrap>[] is M){
			return data.map<SongUrlListWrap>((Map<String, dynamic> e) => SongUrlListWrap.fromJson(e)).toList() as M;
		}
		if(<SongLyricWrap>[] is M){
			return data.map<SongLyricWrap>((Map<String, dynamic> e) => SongLyricWrap.fromJson(e)).toList() as M;
		}
		if(<SongListWrap>[] is M){
			return data.map<SongListWrap>((Map<String, dynamic> e) => SongListWrap.fromJson(e)).toList() as M;
		}
		if(<SongListWrap2>[] is M){
			return data.map<SongListWrap2>((Map<String, dynamic> e) => SongListWrap2.fromJson(e)).toList() as M;
		}
		if(<PersonalizedSongItem>[] is M){
			return data.map<PersonalizedSongItem>((Map<String, dynamic> e) => PersonalizedSongItem.fromJson(e)).toList() as M;
		}
		if(<PersonalizedSongListWrap>[] is M){
			return data.map<PersonalizedSongListWrap>((Map<String, dynamic> e) => PersonalizedSongListWrap.fromJson(e)).toList() as M;
		}
		if(<LikeSongListWrap>[] is M){
			return data.map<LikeSongListWrap>((Map<String, dynamic> e) => LikeSongListWrap.fromJson(e)).toList() as M;
		}
		if(<CloudSongItem>[] is M){
			return data.map<CloudSongItem>((Map<String, dynamic> e) => CloudSongItem.fromJson(e)).toList() as M;
		}
		if(<CloudSongListWrap>[] is M){
			return data.map<CloudSongListWrap>((Map<String, dynamic> e) => CloudSongListWrap.fromJson(e)).toList() as M;
		}
		if(<RecommendSongReason>[] is M){
			return data.map<RecommendSongReason>((Map<String, dynamic> e) => RecommendSongReason.fromJson(e)).toList() as M;
		}
		if(<RecommendSongListWrap>[] is M){
			return data.map<RecommendSongListWrap>((Map<String, dynamic> e) => RecommendSongListWrap.fromJson(e)).toList() as M;
		}
		if(<RecommendSongListWrapX>[] is M){
			return data.map<RecommendSongListWrapX>((Map<String, dynamic> e) => RecommendSongListWrapX.fromJson(e)).toList() as M;
		}
		if(<RecommendSongListHistoryWrap>[] is M){
			return data.map<RecommendSongListHistoryWrap>((Map<String, dynamic> e) => RecommendSongListHistoryWrap.fromJson(e)).toList() as M;
		}
		if(<RecommendSongListHistoryWrapX>[] is M){
			return data.map<RecommendSongListHistoryWrapX>((Map<String, dynamic> e) => RecommendSongListHistoryWrapX.fromJson(e)).toList() as M;
		}
		if(<ArtistSongListWrap>[] is M){
			return data.map<ArtistSongListWrap>((Map<String, dynamic> e) => ArtistSongListWrap.fromJson(e)).toList() as M;
		}
		if(<ArtistNewSongListData>[] is M){
			return data.map<ArtistNewSongListData>((Map<String, dynamic> e) => ArtistNewSongListData.fromJson(e)).toList() as M;
		}
		if(<ArtistNewSongListWrap>[] is M){
			return data.map<ArtistNewSongListWrap>((Map<String, dynamic> e) => ArtistNewSongListWrap.fromJson(e)).toList() as M;
		}
		if(<ArtistDetailAndSongListWrap>[] is M){
			return data.map<ArtistDetailAndSongListWrap>((Map<String, dynamic> e) => ArtistDetailAndSongListWrap.fromJson(e)).toList() as M;
		}
		if(<Play>[] is M){
			return data.map<Play>((Map<String, dynamic> e) => Play.fromJson(e)).toList() as M;
		}
		if(<PlayTrack>[] is M){
			return data.map<PlayTrack>((Map<String, dynamic> e) => PlayTrack.fromJson(e)).toList() as M;
		}
		if(<PlayTrackId>[] is M){
			return data.map<PlayTrackId>((Map<String, dynamic> e) => PlayTrackId.fromJson(e)).toList() as M;
		}
		if(<MultiPlayListWrap>[] is M){
			return data.map<MultiPlayListWrap>((Map<String, dynamic> e) => MultiPlayListWrap.fromJson(e)).toList() as M;
		}
		if(<MultiPlayListWrap2>[] is M){
			return data.map<MultiPlayListWrap2>((Map<String, dynamic> e) => MultiPlayListWrap2.fromJson(e)).toList() as M;
		}
		if(<RecommendPlayListWrap>[] is M){
			return data.map<RecommendPlayListWrap>((Map<String, dynamic> e) => RecommendPlayListWrap.fromJson(e)).toList() as M;
		}
		if(<PersonalizedPlayListWrap>[] is M){
			return data.map<PersonalizedPlayListWrap>((Map<String, dynamic> e) => PersonalizedPlayListWrap.fromJson(e)).toList() as M;
		}
		if(<PlaylistCatalogueItem>[] is M){
			return data.map<PlaylistCatalogueItem>((Map<String, dynamic> e) => PlaylistCatalogueItem.fromJson(e)).toList() as M;
		}
		if(<PlaylistCatalogueWrap>[] is M){
			return data.map<PlaylistCatalogueWrap>((Map<String, dynamic> e) => PlaylistCatalogueWrap.fromJson(e)).toList() as M;
		}
		if(<PlaylistHotTag>[] is M){
			return data.map<PlaylistHotTag>((Map<String, dynamic> e) => PlaylistHotTag.fromJson(e)).toList() as M;
		}
		if(<PlaylistHotTagsItem>[] is M){
			return data.map<PlaylistHotTagsItem>((Map<String, dynamic> e) => PlaylistHotTagsItem.fromJson(e)).toList() as M;
		}
		if(<PlaylistHotTagsWrap>[] is M){
			return data.map<PlaylistHotTagsWrap>((Map<String, dynamic> e) => PlaylistHotTagsWrap.fromJson(e)).toList() as M;
		}
		if(<SinglePlayListWrap>[] is M){
			return data.map<SinglePlayListWrap>((Map<String, dynamic> e) => SinglePlayListWrap.fromJson(e)).toList() as M;
		}
		if(<PlayListDetailDynamicWrap>[] is M){
			return data.map<PlayListDetailDynamicWrap>((Map<String, dynamic> e) => PlayListDetailDynamicWrap.fromJson(e)).toList() as M;
		}
		if(<PlaymodeIntelligenceItem>[] is M){
			return data.map<PlaymodeIntelligenceItem>((Map<String, dynamic> e) => PlaymodeIntelligenceItem.fromJson(e)).toList() as M;
		}
		if(<PlaymodeIntelligenceListWrap>[] is M){
			return data.map<PlaymodeIntelligenceListWrap>((Map<String, dynamic> e) => PlaymodeIntelligenceListWrap.fromJson(e)).toList() as M;
		}
		if(<Artists>[] is M){
			return data.map<Artists>((Map<String, dynamic> e) => Artists.fromJson(e)).toList() as M;
		}
		if(<ArtistsListWrap>[] is M){
			return data.map<ArtistsListWrap>((Map<String, dynamic> e) => ArtistsListWrap.fromJson(e)).toList() as M;
		}
		if(<ArtistsTopListWrap>[] is M){
			return data.map<ArtistsTopListWrap>((Map<String, dynamic> e) => ArtistsTopListWrap.fromJson(e)).toList() as M;
		}
		if(<ArtistsTopListWrapX>[] is M){
			return data.map<ArtistsTopListWrapX>((Map<String, dynamic> e) => ArtistsTopListWrapX.fromJson(e)).toList() as M;
		}
		if(<ArtistIntroduction>[] is M){
			return data.map<ArtistIntroduction>((Map<String, dynamic> e) => ArtistIntroduction.fromJson(e)).toList() as M;
		}
		if(<ArtistDescWrap>[] is M){
			return data.map<ArtistDescWrap>((Map<String, dynamic> e) => ArtistDescWrap.fromJson(e)).toList() as M;
		}
		if(<ArtistDetailData>[] is M){
			return data.map<ArtistDetailData>((Map<String, dynamic> e) => ArtistDetailData.fromJson(e)).toList() as M;
		}
		if(<ArtistDetailWrap>[] is M){
			return data.map<ArtistDetailWrap>((Map<String, dynamic> e) => ArtistDetailWrap.fromJson(e)).toList() as M;
		}
		if(<Album>[] is M){
			return data.map<Album>((Map<String, dynamic> e) => Album.fromJson(e)).toList() as M;
		}
		if(<AlbumDetailWrap>[] is M){
			return data.map<AlbumDetailWrap>((Map<String, dynamic> e) => AlbumDetailWrap.fromJson(e)).toList() as M;
		}
		if(<AlbumDetailDynamicWrap>[] is M){
			return data.map<AlbumDetailDynamicWrap>((Map<String, dynamic> e) => AlbumDetailDynamicWrap.fromJson(e)).toList() as M;
		}
		if(<AlbumListWrap>[] is M){
			return data.map<AlbumListWrap>((Map<String, dynamic> e) => AlbumListWrap.fromJson(e)).toList() as M;
		}
		if(<ArtistAlbumListWrap>[] is M){
			return data.map<ArtistAlbumListWrap>((Map<String, dynamic> e) => ArtistAlbumListWrap.fromJson(e)).toList() as M;
		}
		if(<MvCreator>[] is M){
			return data.map<MvCreator>((Map<String, dynamic> e) => MvCreator.fromJson(e)).toList() as M;
		}
		if(<Mv>[] is M){
			return data.map<Mv>((Map<String, dynamic> e) => Mv.fromJson(e)).toList() as M;
		}
		if(<Mv2>[] is M){
			return data.map<Mv2>((Map<String, dynamic> e) => Mv2.fromJson(e)).toList() as M;
		}
		if(<Mv3>[] is M){
			return data.map<Mv3>((Map<String, dynamic> e) => Mv3.fromJson(e)).toList() as M;
		}
		if(<MvListWrap>[] is M){
			return data.map<MvListWrap>((Map<String, dynamic> e) => MvListWrap.fromJson(e)).toList() as M;
		}
		if(<MvListWrap2>[] is M){
			return data.map<MvListWrap2>((Map<String, dynamic> e) => MvListWrap2.fromJson(e)).toList() as M;
		}
		if(<PersonalizedMvListWrap>[] is M){
			return data.map<PersonalizedMvListWrap>((Map<String, dynamic> e) => PersonalizedMvListWrap.fromJson(e)).toList() as M;
		}
		if(<ArtistMvListWrap>[] is M){
			return data.map<ArtistMvListWrap>((Map<String, dynamic> e) => ArtistMvListWrap.fromJson(e)).toList() as M;
		}
		if(<ArtistNewMvListData>[] is M){
			return data.map<ArtistNewMvListData>((Map<String, dynamic> e) => ArtistNewMvListData.fromJson(e)).toList() as M;
		}
		if(<ArtistNewMvListWrap>[] is M){
			return data.map<ArtistNewMvListWrap>((Map<String, dynamic> e) => ArtistNewMvListWrap.fromJson(e)).toList() as M;
		}
		if(<MvDetailWrap>[] is M){
			return data.map<MvDetailWrap>((Map<String, dynamic> e) => MvDetailWrap.fromJson(e)).toList() as M;
		}
		if(<MvDetailInfoWrap>[] is M){
			return data.map<MvDetailInfoWrap>((Map<String, dynamic> e) => MvDetailInfoWrap.fromJson(e)).toList() as M;
		}
		if(<MvUrl>[] is M){
			return data.map<MvUrl>((Map<String, dynamic> e) => MvUrl.fromJson(e)).toList() as M;
		}
		if(<MvUrlWrap>[] is M){
			return data.map<MvUrlWrap>((Map<String, dynamic> e) => MvUrlWrap.fromJson(e)).toList() as M;
		}
		if(<VideoResolution>[] is M){
			return data.map<VideoResolution>((Map<String, dynamic> e) => VideoResolution.fromJson(e)).toList() as M;
		}
		if(<VideoUrlInfo>[] is M){
			return data.map<VideoUrlInfo>((Map<String, dynamic> e) => VideoUrlInfo.fromJson(e)).toList() as M;
		}
		if(<VideoBase>[] is M){
			return data.map<VideoBase>((Map<String, dynamic> e) => VideoBase.fromJson(e)).toList() as M;
		}
		if(<Video>[] is M){
			return data.map<Video>((Map<String, dynamic> e) => Video.fromJson(e)).toList() as M;
		}
		if(<Video2>[] is M){
			return data.map<Video2>((Map<String, dynamic> e) => Video2.fromJson(e)).toList() as M;
		}
		if(<VideoMetaItem>[] is M){
			return data.map<VideoMetaItem>((Map<String, dynamic> e) => VideoMetaItem.fromJson(e)).toList() as M;
		}
		if(<VideoMetaListWrap>[] is M){
			return data.map<VideoMetaListWrap>((Map<String, dynamic> e) => VideoMetaListWrap.fromJson(e)).toList() as M;
		}
		if(<VideoWrap>[] is M){
			return data.map<VideoWrap>((Map<String, dynamic> e) => VideoWrap.fromJson(e)).toList() as M;
		}
		if(<VideoListWrapX>[] is M){
			return data.map<VideoListWrapX>((Map<String, dynamic> e) => VideoListWrapX.fromJson(e)).toList() as M;
		}
		if(<VideoListWrap>[] is M){
			return data.map<VideoListWrap>((Map<String, dynamic> e) => VideoListWrap.fromJson(e)).toList() as M;
		}
		if(<VideoDetailWrap>[] is M){
			return data.map<VideoDetailWrap>((Map<String, dynamic> e) => VideoDetailWrap.fromJson(e)).toList() as M;
		}
		if(<VideoDetailInfoWrap>[] is M){
			return data.map<VideoDetailInfoWrap>((Map<String, dynamic> e) => VideoDetailInfoWrap.fromJson(e)).toList() as M;
		}
		if(<VideoUrl>[] is M){
			return data.map<VideoUrl>((Map<String, dynamic> e) => VideoUrl.fromJson(e)).toList() as M;
		}
		if(<VideoUrlWrap>[] is M){
			return data.map<VideoUrlWrap>((Map<String, dynamic> e) => VideoUrlWrap.fromJson(e)).toList() as M;
		}
		if(<SearchSongWrap>[] is M){
			return data.map<SearchSongWrap>((Map<String, dynamic> e) => SearchSongWrap.fromJson(e)).toList() as M;
		}
		if(<SearchSongWrapX>[] is M){
			return data.map<SearchSongWrapX>((Map<String, dynamic> e) => SearchSongWrapX.fromJson(e)).toList() as M;
		}
		if(<SearchAlbumsWrapX>[] is M){
			return data.map<SearchAlbumsWrapX>((Map<String, dynamic> e) => SearchAlbumsWrapX.fromJson(e)).toList() as M;
		}
		if(<SearchArtistsWrap>[] is M){
			return data.map<SearchArtistsWrap>((Map<String, dynamic> e) => SearchArtistsWrap.fromJson(e)).toList() as M;
		}
		if(<SearchArtistsWrapX>[] is M){
			return data.map<SearchArtistsWrapX>((Map<String, dynamic> e) => SearchArtistsWrapX.fromJson(e)).toList() as M;
		}
		if(<SearchPlaylistWrap>[] is M){
			return data.map<SearchPlaylistWrap>((Map<String, dynamic> e) => SearchPlaylistWrap.fromJson(e)).toList() as M;
		}
		if(<SearchPlaylistWrapX>[] is M){
			return data.map<SearchPlaylistWrapX>((Map<String, dynamic> e) => SearchPlaylistWrapX.fromJson(e)).toList() as M;
		}
		if(<SearchUserWrapX>[] is M){
			return data.map<SearchUserWrapX>((Map<String, dynamic> e) => SearchUserWrapX.fromJson(e)).toList() as M;
		}
		if(<SearchMvWrapX>[] is M){
			return data.map<SearchMvWrapX>((Map<String, dynamic> e) => SearchMvWrapX.fromJson(e)).toList() as M;
		}
		if(<SearchLyricsWrap>[] is M){
			return data.map<SearchLyricsWrap>((Map<String, dynamic> e) => SearchLyricsWrap.fromJson(e)).toList() as M;
		}
		if(<SearchLyricsWrapX>[] is M){
			return data.map<SearchLyricsWrapX>((Map<String, dynamic> e) => SearchLyricsWrapX.fromJson(e)).toList() as M;
		}
		if(<SearchDjradiorap>[] is M){
			return data.map<SearchDjradiorap>((Map<String, dynamic> e) => SearchDjradiorap.fromJson(e)).toList() as M;
		}
		if(<SearchDjradioWrapX>[] is M){
			return data.map<SearchDjradioWrapX>((Map<String, dynamic> e) => SearchDjradioWrapX.fromJson(e)).toList() as M;
		}
		if(<SearchVideoWrap>[] is M){
			return data.map<SearchVideoWrap>((Map<String, dynamic> e) => SearchVideoWrap.fromJson(e)).toList() as M;
		}
		if(<SearchVideoWrapX>[] is M){
			return data.map<SearchVideoWrapX>((Map<String, dynamic> e) => SearchVideoWrapX.fromJson(e)).toList() as M;
		}
		if(<SearchComplexSong>[] is M){
			return data.map<SearchComplexSong>((Map<String, dynamic> e) => SearchComplexSong.fromJson(e)).toList() as M;
		}
		if(<SearchComplexMlog>[] is M){
			return data.map<SearchComplexMlog>((Map<String, dynamic> e) => SearchComplexMlog.fromJson(e)).toList() as M;
		}
		if(<SearchComplexPlaylist>[] is M){
			return data.map<SearchComplexPlaylist>((Map<String, dynamic> e) => SearchComplexPlaylist.fromJson(e)).toList() as M;
		}
		if(<SearchComplexArtist>[] is M){
			return data.map<SearchComplexArtist>((Map<String, dynamic> e) => SearchComplexArtist.fromJson(e)).toList() as M;
		}
		if(<SearchComplexAlbum>[] is M){
			return data.map<SearchComplexAlbum>((Map<String, dynamic> e) => SearchComplexAlbum.fromJson(e)).toList() as M;
		}
		if(<SearchComplexVideo>[] is M){
			return data.map<SearchComplexVideo>((Map<String, dynamic> e) => SearchComplexVideo.fromJson(e)).toList() as M;
		}
		if(<SearchComplexSimQueryItem>[] is M){
			return data.map<SearchComplexSimQueryItem>((Map<String, dynamic> e) => SearchComplexSimQueryItem.fromJson(e)).toList() as M;
		}
		if(<SearchComplexSimQuery>[] is M){
			return data.map<SearchComplexSimQuery>((Map<String, dynamic> e) => SearchComplexSimQuery.fromJson(e)).toList() as M;
		}
		if(<SearchComplexTalk>[] is M){
			return data.map<SearchComplexTalk>((Map<String, dynamic> e) => SearchComplexTalk.fromJson(e)).toList() as M;
		}
		if(<SearchComplexUser>[] is M){
			return data.map<SearchComplexUser>((Map<String, dynamic> e) => SearchComplexUser.fromJson(e)).toList() as M;
		}
		if(<SearchComplexWrap>[] is M){
			return data.map<SearchComplexWrap>((Map<String, dynamic> e) => SearchComplexWrap.fromJson(e)).toList() as M;
		}
		if(<SearchComplexWrapX>[] is M){
			return data.map<SearchComplexWrapX>((Map<String, dynamic> e) => SearchComplexWrapX.fromJson(e)).toList() as M;
		}
		if(<SearchKey>[] is M){
			return data.map<SearchKey>((Map<String, dynamic> e) => SearchKey.fromJson(e)).toList() as M;
		}
		if(<SearchKeyWrap>[] is M){
			return data.map<SearchKeyWrap>((Map<String, dynamic> e) => SearchKeyWrap.fromJson(e)).toList() as M;
		}
		if(<SearchHotKey>[] is M){
			return data.map<SearchHotKey>((Map<String, dynamic> e) => SearchHotKey.fromJson(e)).toList() as M;
		}
		if(<SearchHotKeyWrap>[] is M){
			return data.map<SearchHotKeyWrap>((Map<String, dynamic> e) => SearchHotKeyWrap.fromJson(e)).toList() as M;
		}
		if(<SearchKeyWrapX>[] is M){
			return data.map<SearchKeyWrapX>((Map<String, dynamic> e) => SearchKeyWrapX.fromJson(e)).toList() as M;
		}
		if(<SearchKeyDetailedItem>[] is M){
			return data.map<SearchKeyDetailedItem>((Map<String, dynamic> e) => SearchKeyDetailedItem.fromJson(e)).toList() as M;
		}
		if(<SearchKeyDetailedWrap>[] is M){
			return data.map<SearchKeyDetailedWrap>((Map<String, dynamic> e) => SearchKeyDetailedWrap.fromJson(e)).toList() as M;
		}
		if(<SearchSuggestItem>[] is M){
			return data.map<SearchSuggestItem>((Map<String, dynamic> e) => SearchSuggestItem.fromJson(e)).toList() as M;
		}
		if(<SearchSuggestWrap>[] is M){
			return data.map<SearchSuggestWrap>((Map<String, dynamic> e) => SearchSuggestWrap.fromJson(e)).toList() as M;
		}
		if(<SearchSuggestWrapX>[] is M){
			return data.map<SearchSuggestWrapX>((Map<String, dynamic> e) => SearchSuggestWrapX.fromJson(e)).toList() as M;
		}
		if(<SearchMultiMatchWrap>[] is M){
			return data.map<SearchMultiMatchWrap>((Map<String, dynamic> e) => SearchMultiMatchWrap.fromJson(e)).toList() as M;
		}
		if(<SearchMultiMatchWrapX>[] is M){
			return data.map<SearchMultiMatchWrapX>((Map<String, dynamic> e) => SearchMultiMatchWrapX.fromJson(e)).toList() as M;
		}
		if(<BannerItem>[] is M){
			return data.map<BannerItem>((Map<String, dynamic> e) => BannerItem.fromJson(e)).toList() as M;
		}
		if(<BannerListWrap>[] is M){
			return data.map<BannerListWrap>((Map<String, dynamic> e) => BannerListWrap.fromJson(e)).toList() as M;
		}
		if(<BannerListWrap2>[] is M){
			return data.map<BannerListWrap2>((Map<String, dynamic> e) => BannerListWrap2.fromJson(e)).toList() as M;
		}
		if(<PageConfig>[] is M){
			return data.map<PageConfig>((Map<String, dynamic> e) => PageConfig.fromJson(e)).toList() as M;
		}
		if(<HomeBlockPageUiElementTitle>[] is M){
			return data.map<HomeBlockPageUiElementTitle>((Map<String, dynamic> e) => HomeBlockPageUiElementTitle.fromJson(e)).toList() as M;
		}
		if(<HomeBlockPageUiElementButton>[] is M){
			return data.map<HomeBlockPageUiElementButton>((Map<String, dynamic> e) => HomeBlockPageUiElementButton.fromJson(e)).toList() as M;
		}
		if(<HomeBlockPageUiElementImage>[] is M){
			return data.map<HomeBlockPageUiElementImage>((Map<String, dynamic> e) => HomeBlockPageUiElementImage.fromJson(e)).toList() as M;
		}
		if(<HomeBlockPageUiElement>[] is M){
			return data.map<HomeBlockPageUiElement>((Map<String, dynamic> e) => HomeBlockPageUiElement.fromJson(e)).toList() as M;
		}
		if(<HomeBlockPageResourceExt>[] is M){
			return data.map<HomeBlockPageResourceExt>((Map<String, dynamic> e) => HomeBlockPageResourceExt.fromJson(e)).toList() as M;
		}
		if(<HomeBlockPageResource>[] is M){
			return data.map<HomeBlockPageResource>((Map<String, dynamic> e) => HomeBlockPageResource.fromJson(e)).toList() as M;
		}
		if(<HomeBlockPageCreative>[] is M){
			return data.map<HomeBlockPageCreative>((Map<String, dynamic> e) => HomeBlockPageCreative.fromJson(e)).toList() as M;
		}
		if(<HomeBlockPageItem>[] is M){
			return data.map<HomeBlockPageItem>((Map<String, dynamic> e) => HomeBlockPageItem.fromJson(e)).toList() as M;
		}
		if(<HomeBlockPageCursor>[] is M){
			return data.map<HomeBlockPageCursor>((Map<String, dynamic> e) => HomeBlockPageCursor.fromJson(e)).toList() as M;
		}
		if(<HomeBlockPage>[] is M){
			return data.map<HomeBlockPage>((Map<String, dynamic> e) => HomeBlockPage.fromJson(e)).toList() as M;
		}
		if(<HomeBlockPageWrap>[] is M){
			return data.map<HomeBlockPageWrap>((Map<String, dynamic> e) => HomeBlockPageWrap.fromJson(e)).toList() as M;
		}
		if(<HomeDragonBallItem>[] is M){
			return data.map<HomeDragonBallItem>((Map<String, dynamic> e) => HomeDragonBallItem.fromJson(e)).toList() as M;
		}
		if(<HomeDragonBallWrap>[] is M){
			return data.map<HomeDragonBallWrap>((Map<String, dynamic> e) => HomeDragonBallWrap.fromJson(e)).toList() as M;
		}
		if(<CountriesCodeItem>[] is M){
			return data.map<CountriesCodeItem>((Map<String, dynamic> e) => CountriesCodeItem.fromJson(e)).toList() as M;
		}
		if(<CountriesCodeIndex>[] is M){
			return data.map<CountriesCodeIndex>((Map<String, dynamic> e) => CountriesCodeIndex.fromJson(e)).toList() as M;
		}
		if(<CountriesCodeListWrap>[] is M){
			return data.map<CountriesCodeListWrap>((Map<String, dynamic> e) => CountriesCodeListWrap.fromJson(e)).toList() as M;
		}
		if(<PersonalizedPrivateContentItem>[] is M){
			return data.map<PersonalizedPrivateContentItem>((Map<String, dynamic> e) => PersonalizedPrivateContentItem.fromJson(e)).toList() as M;
		}
		if(<PersonalizedPrivateContentListWrap>[] is M){
			return data.map<PersonalizedPrivateContentListWrap>((Map<String, dynamic> e) => PersonalizedPrivateContentListWrap.fromJson(e)).toList() as M;
		}
		if(<TopListTrack>[] is M){
			return data.map<TopListTrack>((Map<String, dynamic> e) => TopListTrack.fromJson(e)).toList() as M;
		}
		if(<TopList>[] is M){
			return data.map<TopList>((Map<String, dynamic> e) => TopList.fromJson(e)).toList() as M;
		}
		if(<ArtistTopListArtists>[] is M){
			return data.map<ArtistTopListArtists>((Map<String, dynamic> e) => ArtistTopListArtists.fromJson(e)).toList() as M;
		}
		if(<ArtistTopList>[] is M){
			return data.map<ArtistTopList>((Map<String, dynamic> e) => ArtistTopList.fromJson(e)).toList() as M;
		}
		if(<RewardTopList>[] is M){
			return data.map<RewardTopList>((Map<String, dynamic> e) => RewardTopList.fromJson(e)).toList() as M;
		}
		if(<TopListWrap>[] is M){
			return data.map<TopListWrap>((Map<String, dynamic> e) => TopListWrap.fromJson(e)).toList() as M;
		}
		if(<TopListDetailWrap>[] is M){
			return data.map<TopListDetailWrap>((Map<String, dynamic> e) => TopListDetailWrap.fromJson(e)).toList() as M;
		}
		if(<McalendarDetailEvent>[] is M){
			return data.map<McalendarDetailEvent>((Map<String, dynamic> e) => McalendarDetailEvent.fromJson(e)).toList() as M;
		}
		if(<McalendarDetail>[] is M){
			return data.map<McalendarDetail>((Map<String, dynamic> e) => McalendarDetail.fromJson(e)).toList() as M;
		}
		if(<McalendarDetailWrap>[] is M){
			return data.map<McalendarDetailWrap>((Map<String, dynamic> e) => McalendarDetailWrap.fromJson(e)).toList() as M;
		}
		if(<AudioMatchResult>[] is M){
			return data.map<AudioMatchResult>((Map<String, dynamic> e) => AudioMatchResult.fromJson(e)).toList() as M;
		}
		if(<AudioMatchResultData>[] is M){
			return data.map<AudioMatchResultData>((Map<String, dynamic> e) => AudioMatchResultData.fromJson(e)).toList() as M;
		}
		if(<AudioMatchResultWrap>[] is M){
			return data.map<AudioMatchResultWrap>((Map<String, dynamic> e) => AudioMatchResultWrap.fromJson(e)).toList() as M;
		}
		if(<ListenTogetherStatusData>[] is M){
			return data.map<ListenTogetherStatusData>((Map<String, dynamic> e) => ListenTogetherStatusData.fromJson(e)).toList() as M;
		}
		if(<ListenTogetherStatusWrap>[] is M){
			return data.map<ListenTogetherStatusWrap>((Map<String, dynamic> e) => ListenTogetherStatusWrap.fromJson(e)).toList() as M;
		}
		if(<UploadImageAlloc>[] is M){
			return data.map<UploadImageAlloc>((Map<String, dynamic> e) => UploadImageAlloc.fromJson(e)).toList() as M;
		}
		if(<UploadImageAllocWrap>[] is M){
			return data.map<UploadImageAllocWrap>((Map<String, dynamic> e) => UploadImageAllocWrap.fromJson(e)).toList() as M;
		}
		if(<UploadImageResult>[] is M){
			return data.map<UploadImageResult>((Map<String, dynamic> e) => UploadImageResult.fromJson(e)).toList() as M;
		}
		if(<UserSetting>[] is M){
			return data.map<UserSetting>((Map<String, dynamic> e) => UserSetting.fromJson(e)).toList() as M;
		}
		if(<UserSettingWrap>[] is M){
			return data.map<UserSettingWrap>((Map<String, dynamic> e) => UserSettingWrap.fromJson(e)).toList() as M;
		}
		if(<NeteaseSimpleUserInfo>[] is M){
			return data.map<NeteaseSimpleUserInfo>((Map<String, dynamic> e) => NeteaseSimpleUserInfo.fromJson(e)).toList() as M;
		}
		if(<NeteaseUserInfo>[] is M){
			return data.map<NeteaseUserInfo>((Map<String, dynamic> e) => NeteaseUserInfo.fromJson(e)).toList() as M;
		}
		if(<NeteaseUserDetail>[] is M){
			return data.map<NeteaseUserDetail>((Map<String, dynamic> e) => NeteaseUserDetail.fromJson(e)).toList() as M;
		}
		if(<NeteaseUserSubcount>[] is M){
			return data.map<NeteaseUserSubcount>((Map<String, dynamic> e) => NeteaseUserSubcount.fromJson(e)).toList() as M;
		}
		if(<NeteaseUserLevel>[] is M){
			return data.map<NeteaseUserLevel>((Map<String, dynamic> e) => NeteaseUserLevel.fromJson(e)).toList() as M;
		}
		if(<NeteaseUserLevelWrap>[] is M){
			return data.map<NeteaseUserLevelWrap>((Map<String, dynamic> e) => NeteaseUserLevelWrap.fromJson(e)).toList() as M;
		}
		if(<UserFollowListWrap>[] is M){
			return data.map<UserFollowListWrap>((Map<String, dynamic> e) => UserFollowListWrap.fromJson(e)).toList() as M;
		}
		if(<UserFollowedListWrap>[] is M){
			return data.map<UserFollowedListWrap>((Map<String, dynamic> e) => UserFollowedListWrap.fromJson(e)).toList() as M;
		}
		if(<UserListWrap>[] is M){
			return data.map<UserListWrap>((Map<String, dynamic> e) => UserListWrap.fromJson(e)).toList() as M;
		}
		if(<ArtistsSubListWrap>[] is M){
			return data.map<ArtistsSubListWrap>((Map<String, dynamic> e) => ArtistsSubListWrap.fromJson(e)).toList() as M;
		}
		if(<MvSubListWrap>[] is M){
			return data.map<MvSubListWrap>((Map<String, dynamic> e) => MvSubListWrap.fromJson(e)).toList() as M;
		}
		if(<AlbumSubListWrap>[] is M){
			return data.map<AlbumSubListWrap>((Map<String, dynamic> e) => AlbumSubListWrap.fromJson(e)).toList() as M;
		}
		if(<PlayRecordItem>[] is M){
			return data.map<PlayRecordItem>((Map<String, dynamic> e) => PlayRecordItem.fromJson(e)).toList() as M;
		}
		if(<PlayRecordListWrap>[] is M){
			return data.map<PlayRecordListWrap>((Map<String, dynamic> e) => PlayRecordListWrap.fromJson(e)).toList() as M;
		}
		if(<PlaylistCreateWrap>[] is M){
			return data.map<PlaylistCreateWrap>((Map<String, dynamic> e) => PlaylistCreateWrap.fromJson(e)).toList() as M;
		}
		if(<PlaylistSubscribersWrap>[] is M){
			return data.map<PlaylistSubscribersWrap>((Map<String, dynamic> e) => PlaylistSubscribersWrap.fromJson(e)).toList() as M;
		}

		debugPrint("${M.toString()} not found");
	
		return null;
}

	static M? fromJsonAsT<M>(dynamic json) {
		if (json is List) {
			return _getListChildType<M>(json.map((e) => e as Map<String, dynamic>).toList());
		} else {
			return jsonConvert.asT<M>(json);
		}
	}
}